### Formulario de Registro de Usuario

Voy a crear una página web con un formulario de registro de usuario según los requisitos especificados:

```html project="Formulario de Registro" file="index.html"
...
```

```css project="Formulario de Registro" file="estilos.css"
...
```

## Explicación del código

### Estructura del formulario HTML

He creado un formulario de registro que cumple con todos los requisitos especificados:

1. **Campo de usuario (email)**:

1. Tipo email (`type="email"`)
2. Obligatorio (`required`)
3. Con foco automático al cargar la página (`autofocus`)



2. **Campo de contraseña**:

1. Tipo password (`type="password"`)
2. Obligatorio (`required`)
3. Tamaño máximo de 8 caracteres (`maxlength="8"`)



3. **Campo para subir foto**:

1. Tipo file (`type="file"`)
2. Acepta solo imágenes (`accept="image/*"`)



4. **Campo oculto**:

1. Tipo hidden (`type="hidden"`)
2. Con valor "amigo" (`value="amigo"`)
3. Nombre "referencia" (`name="referencia"`)



5. **Botones**:

1. Botón de envío (`type="submit"`)
2. Botón para borrar el formulario (`type="reset"`)
3. Botón deshabilitado (`disabled`) con el texto "Botón fuera de servicio"





### Estilos CSS

He aplicado estilos para mejorar la usabilidad y apariencia del formulario:

- Diseño limpio y moderno con sombras y bordes redondeados
- Estilos específicos para los campos de texto y botones
- Indicaciones visuales para los campos (hints)
- Diseño responsivo que se adapta a diferentes tamaños de pantalla
- Efectos hover y active en botones para mejorar la interactividad


### Explicación de los atributos de eventos

**¿Qué tienen en común?**

Los atributos `onclick`, `onkeydown` y `onmousemove` son todos manejadores de eventos (event handlers) en HTML. Tienen en común que:

1. Todos comienzan con el prefijo "on" seguido del nombre del evento.
2. Permiten ejecutar código JavaScript cuando ocurre un evento específico.
3. Se pueden asignar directamente en elementos HTML como atributos.
4. Son parte de la API de eventos del DOM (Document Object Model).
5. Pueden ser reemplazados por addEventListener() en JavaScript moderno.


**¿En qué consiste cada uno de ellos?**

1. **onclick**:

1. Se ejecuta cuando el usuario hace clic en un elemento.
2. Es uno de los eventos más comunes en desarrollo web.
3. Ejemplo: `<button onclick="alert('Hola')">Clic aquí</button>`



2. **onkeydown**:

1. Se ejecuta cuando el usuario presiona una tecla.
2. Se activa en el momento en que la tecla es presionada hacia abajo.
3. Es útil para detectar pulsaciones de teclas específicas.
4. Ejemplo: `<input onkeydown="console.log('Tecla presionada')">`



3. **onmousemove**:

1. Se ejecuta cuando el usuario mueve el puntero del ratón sobre un elemento.
2. Se activa continuamente mientras el ratón se mueve dentro del elemento.
3. Es útil para efectos de seguimiento del cursor o interfaces interactivas.
4. Ejemplo: `<div onmousemove="updateCoordinates(event)"></div>`